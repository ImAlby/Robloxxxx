local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local CleanUI = {}
CleanUI.__index = CleanUI

local function New(class, props)
	local obj = Instance.new(class)
	for k, v in pairs(props or {}) do obj[k] = v end
	return obj
end

function CleanUI:CreateWindow(title, position)
	local screenGui = New("ScreenGui", {
		Name = "CleanUILib",
		ResetOnSpawn = false,
		Parent = PlayerGui
	})

	local frame = New("Frame", {
		Name = "MainFrame",
		Parent = screenGui,
		Size = UDim2.new(0, 300, 0, 400),
		Position = position or UDim2.new(0.5, -150, 0.5, -200),
		BackgroundColor3 = Color3.fromRGB(40, 40, 40),
		Draggable = true,
		Active = true
	})
	New("UICorner", { Parent = frame, CornerRadius = UDim.new(0, 6) })

	New("TextLabel", {
		Parent = frame,
		Text = title or "UI Window",
		Size = UDim2.new(1, 0, 0, 32),
		BackgroundTransparency = 1,
		TextColor3 = Color3.fromRGB(220, 220, 220),
		Font = Enum.Font.GothamBold,
		TextSize = 18
	})

	local content = New("Frame", {
		Name = "Content",
		Parent = frame,
		Position = UDim2.new(0, 0, 0, 36),
		Size = UDim2.new(1, 0, 1, -36),
		BackgroundTransparency = 1
	})

	local layout = Instance.new("UIListLayout", content)
	layout.Padding = UDim.new(0, 8)
	layout.SortOrder = Enum.SortOrder.LayoutOrder

	return setmetatable({Frame = content, Sections = {}}, CleanUI)
end

function CleanUI:CreateSection(title)
	local section = New("Frame", {
		Parent = self.Frame,
		Size = UDim2.new(1, -20, 0, 0),
		BackgroundTransparency = 1,
		LayoutOrder = #self.Sections + 1
	})

	local lbl = New("TextLabel", {
		Parent = section,
		Text = title or "",
		Size = UDim2.new(1, 0, 0, 24),
		BackgroundTransparency = 1,
		TextColor3 = Color3.fromRGB(200, 200, 200),
		Font = Enum.Font.GothamBold,
		TextSize = 16,
		TextXAlignment = Enum.TextXAlignment.Left
	})

	local layout = Instance.new("UIListLayout", section)
	layout.Padding = UDim.new(0, 4)

	layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		section.Size = UDim2.new(1, -20, 0, layout.AbsoluteContentSize.Y)
	end)

	table.insert(self.Sections, section)
	return section
end

function CleanUI:AddToggle(section, label, callback)
	local btn = New("TextButton", {
		Parent = section,
		Text = label,
		Size = UDim2.new(1, 0, 0, 30),
		BackgroundColor3 = Color3.fromRGB(60, 60, 60),
		TextColor3 = Color3.fromRGB(220, 220, 220),
		Font = Enum.Font.Gotham,
		TextSize = 14
	})
	New("UICorner", {Parent = btn, CornerRadius = UDim.new(0, 4)})

	local state = false
	btn.MouseButton1Click:Connect(function()
		state = not state
		btn.BackgroundColor3 = state and Color3.fromRGB(80, 80, 80) or Color3.fromRGB(60, 60, 60)
		if callback then callback(state) end
	end)
end

function CleanUI:AddSlider(section, label, min, max, default, callback)
	local container = New("Frame", {
		Parent = section,
		Size = UDim2.new(1, 0, 0, 36),
		BackgroundTransparency = 1
	})

	New("TextLabel", {
		Parent = container,
		Text = label,
		Size = UDim2.new(1, 0, 0, 18),
		TextColor3 = Color3.fromRGB(200, 200, 200),
		BackgroundTransparency = 1,
		Font = Enum.Font.Gotham,
		TextSize = 14,
		TextXAlignment = Enum.TextXAlignment.Left
	})

	local sliderBg = New("Frame", {
		Parent = container,
		Size = UDim2.new(1, -10, 0, 6),
		Position = UDim2.new(0, 5, 0, 24),
		BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	})
	New("UICorner", {Parent = sliderBg, CornerRadius = UDim.new(0, 3)})

	local fill = New("Frame", {
		Parent = sliderBg,
		Size = UDim2.new((default - min) / (max - min), 0, 1, 0),
		BackgroundColor3 = Color3.fromRGB(120, 120, 120)
	})
	New("UICorner", {Parent = fill, CornerRadius = UDim.new(0, 3)})

	local dragging = false
	sliderBg.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = true end
	end)
	sliderBg.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging = false end
	end)
	sliderBg.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local pos = math.clamp((input.Position.X - sliderBg.AbsolutePosition.X) / sliderBg.AbsoluteSize.X, 0, 1)
			fill.Size = UDim2.new(pos, 0, 1, 0)
			if callback then callback(math.floor(min + (max - min) * pos)) end
		end
	end)
end

function CleanUI:AddTextbox(section, label, placeholder, callback)
	local container = New("Frame", {
		Parent = section,
		Size = UDim2.new(1, 0, 0, 30),
		BackgroundTransparency = 1
	})

	New("TextLabel", {
		Parent = container,
		Text = label,
		Size = UDim2.new(0.4, 0, 1, 0),
		TextColor3 = Color3.fromRGB(200, 200, 200),
		BackgroundTransparency = 1,
		Font = Enum.Font.Gotham,
		TextSize = 14,
		TextXAlignment = Enum.TextXAlignment.Left
	})

	local box = New("TextBox", {
		Parent = container,
		PlaceholderText = placeholder or "",
		Size = UDim2.new(0.6, -4, 1, 0),
		Position = UDim2.new(0.4, 4, 0, 0),
		BackgroundColor3 = Color3.fromRGB(60, 60, 60),
		TextColor3 = Color3.fromRGB(220, 220, 220),
		Font = Enum.Font.Gotham,
		TextSize = 14,
		ClearTextOnFocus = false
	})
	New("UICorner", {Parent = box, CornerRadius = UDim.new(0, 4)})

	box.FocusLost:Connect(function()
		if callback then callback(box.Text) end
	end)
end

function CleanUI:AddDropdown(section, label, options, callback)
	local btn = New("TextButton", {
		Parent = section,
		Text = label,
		Size = UDim2.new(1, 0, 0, 30),
		BackgroundColor3 = Color3.fromRGB(60, 60, 60),
		TextColor3 = Color3.fromRGB(220, 220, 220),
		Font = Enum.Font.Gotham,
		TextSize = 14
	})
	New("UICorner", {Parent = btn, CornerRadius = UDim.new(0, 4)})

	local listFrame
	btn.MouseButton1Click:Connect(function()
		if listFrame then
			listFrame:Destroy()
			listFrame = nil
		else
			listFrame = New("Frame", {
				Parent = section,
				Size = UDim2.new(1, 0, 0, #options * 24),
				BackgroundColor3 = Color3.fromRGB(50, 50, 50),
				Position = UDim2.new(0, 0, 0, btn.AbsolutePosition.Y - section.AbsolutePosition.Y + btn.AbsoluteSize.Y)
			})
			New("UICorner", {Parent = listFrame, CornerRadius = UDim.new(0, 4)})

			for i, option in ipairs(options) do
				local item = New("TextButton", {
					Parent = listFrame,
					Text = option,
					Size = UDim2.new(1, 0, 0, 24),
					Position = UDim2.new(0, 0, 0, (i - 1) * 24),
					BackgroundTransparency = 1,
					TextColor3 = Color3.fromRGB(220, 220, 220),
					Font = Enum.Font.Gotham,
					TextSize = 14,
					AutoButtonColor = true
				})

				item.MouseButton1Click:Connect(function()
					btn.Text = label .. ": " .. option
					if callback then callback(option) end
					listFrame:Destroy()
					listFrame = nil
				end)
			end
		end
	end)
end

return CleanUI

